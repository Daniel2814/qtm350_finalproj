{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Economic Development Analysis\"\n",
        "subtitle: \"QTM350 Final Project\"\n",
        "author: \"Davis Boor (2556176), Emma Jinright (2488724), Daniel Nickas (2549711), and Nick Richards (2495699)\"\n",
        "date: \"2025-04-28\"\n",
        "format: html\n",
        "---\n",
        "\n",
        "\n",
        "## Introduction\n",
        "\n",
        "\n",
        "\n",
        "## Data Description\n",
        "\n",
        "This data is from the [World Bank's World Development Indicators](https://databank.worldbank.org/source/world-development-indicators). We will be utilizing a variety of economic development indicators to conduct this analysis. Our main indicators are `GDP per capita`, `employment to population ratio`, `GDP growth`, and `Davis's Indicator`:\n",
        "\n",
        "* **`GDP per capita`** represented by the indicator NY.GDP.PCAP.KD, measures a country's economic output divided by its population, adjusted for inflation using constant 2015 US dollars. It reflects the average income or productivity per person and is commonly used as a proxy for a country’s standard of living and overall economic development. This data was obtained from the World Bank and spans from 1960 to 2023 for most countries. We supplemented the GDP data with country-level metadata including country codes and regions, which allowed for comparative and regional analyses across global economies.\n",
        "\n",
        "The dataset includes annual GDP per capita values for a wide range of countries, enabling longitudinal comparisons and trend analysis. The use of constant dollars helps control for inflation and facilitates meaningful comparisons over time. We focused on three countries—the United States (USA), China (CHN), and India (IND)—to examine contrasting economic trajectories, and we also included clustering and forecasting techniques to further explore global patterns and project future developments.\n",
        "\n",
        "* **`employment to population ratio`** is a variable that measures the proportion of a country’s working-age population that is currently employed. It reflects the share of people aged 15 and older who are participating in the labor market by holding a job. A higher employment-to-population ratio indicates that a larger percentage of the population is contributing to economic production, while a lower ratio suggests that many individuals are either unemployed, not actively seeking work, or otherwise outside the labor force. This metric is critical for understanding the relationship between labor markets and economic development. This variable is named `L.EMP.TOTL.SP.ZS.` and can be found [here](https://data.worldbank.org/indicator/SL.EMP.TOTL.SP.ZS.). For analysis, we also utilized country metadata that contained information on `region`.  \n",
        "\n",
        "In the context of economic development, the employment-to-population ratio serves as an important indicator of how well an economy is utilizing its human resources. A rising ratio typically suggests positive development trends, such as increasing job creation, greater access to employment opportunities, and improved living standards. Economies with consistently high employment-to-population ratios often experience broader economic growth, higher productivity, and reduced poverty rates. Conversely, a low ratio can signal structural problems like weak labor market demand, gender disparities in employment, or a mismatch between skills and job opportunities. Natural resource dependence can also influence this ratio: in countries heavily reliant on oil or mining, wealth may be generated without widespread employment, leading to lower overall participation rates despite high national incomes. Thus, analyzing changes in the employment-to-population ratio over time offers key insights into the inclusiveness and sustainability of economic growth. \n",
        "\n",
        "* **`GDP growth`** is a variable that captures the annual percent growth of GDP for countries from 1960 to 2023. More specifically, in the World Development Indicators, this variable is named `NY.GDP.MKTP.KD.ZG.` and can be found [here](https://data.worldbank.org/indicator/NY.GDP.MKTP.KD.ZG). For analysis, we also utilized country metadata that contained information on `region` and `income level`.\n",
        "\n",
        "## Data Analysis\n",
        "\n",
        "### GDP per Capita\n",
        "\n",
        "The time series analysis of GDP per capita reveals significant differences in the economic development trajectories of the USA, China, and India. The USA shows a consistent upward trend over the past six decades, with only minor dips during economic recessions. Its GDP per capita remains among the highest globally, highlighting its established infrastructure, productivity, and high standard of living.\n",
        "\n",
        "In contrast, China’s GDP per capita remained relatively flat until the 1990s, after which it began to rise exponentially. This reflects the country’s rapid industrialization, export-driven growth, and policy reforms that integrated it into the global economy. India’s growth has also accelerated in recent decades, though at a slower pace than China’s. The data shows a steady increase from the early 2000s onward, indicative of ongoing development, expansion of services, and infrastructure investment.\n",
        "\n",
        "To explore future trends, we applied a time series forecasting model to project the USA’s GDP per capita for upcoming years. While the model suggests continued growth, this projection is subject to uncertainty due to potential global economic fluctuations.\n",
        "\n",
        "We also conducted a PCA (Principal Component Analysis) and KMeans clustering on GDP per capita data from 2013 to 2023 to identify global development patterns. This dimensionality reduction technique allowed us to visualize economic similarity between countries, revealing three main clusters: high-income economies, emerging markets, and lower-income nations. The clustering results emphasize persistent global inequality in economic output per person, while also identifying convergence among some developing countries.\n",
        "\n",
        "Together, these analyses offer a multifaceted view of how economies have evolved, diverged, and converged in terms of per capita income, and provide a framework for understanding global economic dynamics and potential future trends.\n",
        "\n",
        "### Employment to Population Ratio\n",
        "\n",
        "The Employment-to-Population Ratio trends from 1990-2024 (Many too many data points were excluded before 1990, so it did not necessarily make sense to show N/A values) show clear differences across global regions, revealing important insights about labor market dynamics and economic structures. North America and East Asia & Pacific consistently maintain the highest employment-to-population ratios, while the Middle East & North Africa region shows persistently lower levels. A sharp global decline around 2020 reflects the impact of the COVID-19 pandemic, after which most regions partially recovered, although some — particularly Latin America and Europe — continued to lag. Notably, Sub-Saharan Africa exhibits a relatively resilient employment pattern despite ongoing global shocks, likely due to its labor-intensive informal economy. Overall, the World Average line demonstrates a slow, steady decline over time, highlighting a global trend toward slightly lower labor market participation.\n",
        "\n",
        "Natural resources play a critical role in explaining these regional differences. Resource-rich economies, particularly those dependent on oil exports such as those in the Middle East and North Africa, often exhibit lower employment-to-population ratios. This reflects the \"resource curse,\" where resource wealth does not translate into widespread job creation due to capital-intensive industries dominating national output. In contrast, regions like Sub-Saharan Africa, heavily reliant on agriculture and mining, maintain higher employment ratios despite lower GDP per capita, driven by the need for broad participation in informal sectors. The relative resilience of East Asia and North America further suggests that diversified economies with strong service and industrial sectors are better positioned to maintain stable employment levels, even during global disruptions. These findings are consistent with research from the World Bank (2021), the International Labour Organization (2020), and Sachs and Warner (1995), which collectively emphasize the importance of economic diversification in sustaining employment growth.\n",
        "\n",
        "### GDP Growth\n",
        "\n",
        "The next indicator that we are interested in analyzing is GDP growth. In order to analyze this variable, we first did data cleaning using SQLite. We removed unneeded variables, cleaned variable names, and joined our GDP growth indicator with the country metadata. Then, we removed entries where there was no region. This is because the `country_name` column also contained regions, income levels, and world averages and to avoid redundancy with our joined data, we removed it. Lastly, we pivotted the table into a long format where instead of each year having it's own column, there is a year column and then a GDP growth column to capture the percentage of GDP growth for every year. After cleaning was completed, some simple descriptive statistics tables were created using SQLite which can be seen below. After that, python was used to create visualizations to support further analysis. The main questions we were trying to answer through the analysis of GDP growth was how GDP growth had changed over time between different regions and income levels compared to the world average. The code used to complete this analysis is located in the scripts file of this gtihub repository [here](https://github.com/Daniel2814/qtm350_finalproj/tree/d5262c78c7946d1de2ea87f036598ffe62cc3b17/scripts).\n",
        "\n",
        "\n",
        "\n",
        "### GDP per Capita\n",
        "\n",
        "\n",
        "### Employment to Population Ratio\n"
      ],
      "id": "3be90207"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: setup1\n",
        "#| include: false\n",
        "# Import necessary libraries\n",
        "import pandas as pd\n",
        "import sqlite3 \n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib\n",
        "matplotlib.use('Agg')\n",
        "import seaborn as sns\n",
        "from matplotlib.ticker import MultipleLocator\n",
        "import os\n",
        "from IPython.display import Image, display\n",
        "\n",
        "# Connect to the SQLite database\n",
        "\n",
        "conn = sqlite3.connect(\"employment.db\")\n",
        "cursor = conn.cursor()\n",
        "cursor.execute(\"PRAGMA foreign_keys = ON;\")\n",
        "print(\"Database connection established and foreign keys enabled.\")\n",
        "\n",
        "# Load employment data (this was missing earlier!)\n",
        "employment = pd.read_csv(\"../data/API_SL.EMP.TOTL.SP.ZS_DS2_en_csv_v2_23936.csv\", skiprows=4)\n",
        "employment.to_sql(\"employment\", conn, if_exists=\"replace\", index=False)\n",
        "\n",
        "# Load countries metadata\n",
        "countries = pd.read_csv(\"../data/Metadata_Country_API_NY.GDP.MKTP.KD.ZG_DS2_en_csv_v2_19358.csv\")\n",
        "countries.to_sql(\"countries\", conn, if_exists=\"replace\", index=False)\n",
        "\n",
        "# Clean employment data by joining with country metadata\n",
        "years = [str(year) for year in range(1960, 2025)]\n",
        "year_columns = \", \".join([f\"`{year}`\" for year in years])\n",
        "\n",
        "query1 = f\"\"\"\n",
        "DROP TABLE IF EXISTS employment_clean;\n",
        "CREATE TABLE employment_clean AS\n",
        "SELECT \n",
        "    employment.`Country Name` AS country_name,\n",
        "    employment.`Country Code` AS country_code,\n",
        "    {year_columns},\n",
        "    countries.Region AS region,\n",
        "    countries.IncomeGroup AS income_group\n",
        "FROM employment\n",
        "LEFT JOIN countries\n",
        "ON employment.`Country Code` = countries.`Country Code`\n",
        "WHERE countries.Region IS NOT NULL;\n",
        "\"\"\"\n",
        "conn.executescript(query1)\n",
        "conn.commit()\n",
        "\n",
        "union_queries = []\n",
        "\n",
        "for year in years:\n",
        "    union_queries.append(f\"\"\"\n",
        "    SELECT \n",
        "        country_name,\n",
        "        country_code,\n",
        "        region,\n",
        "        income_group,\n",
        "        '{year}' AS year,\n",
        "        `{year}` AS employment_to_pop\n",
        "    FROM employment_clean\n",
        "    WHERE `{year}` IS NOT NULL\n",
        "    \"\"\")\n",
        "\n",
        "query2 = \" UNION ALL \".join(union_queries)\n",
        "\n",
        "\n",
        "create_table_query = f\"\"\"\n",
        "DROP TABLE IF EXISTS employment_long;\n",
        "CREATE TABLE employment_long AS\n",
        "{query2}\n",
        "\"\"\"\n",
        "conn.executescript(create_table_query)\n",
        "conn.commit()\n",
        "\n",
        "print(\"Table employment_long created successfully.\")\n",
        "\n",
        "# Calculate World Average Employment-to-Population Ratio\n",
        "query3 = '''\n",
        "-- Calculate the world average employment ratio for each year\n",
        "WITH world_avg AS (\n",
        "    SELECT \n",
        "        year,\n",
        "        AVG(employment_to_pop) AS world_avg_employment\n",
        "    FROM employment_long\n",
        "    WHERE region IS NOT NULL\n",
        "    GROUP BY year\n",
        ")\n",
        "-- Insert world average into employment_long\n",
        "INSERT INTO employment_long (country_name, country_code, region, income_group, year, employment_to_pop)\n",
        "SELECT \n",
        "    'World' AS country_name,\n",
        "    NULL AS country_code,\n",
        "    'World' AS region,\n",
        "    'World' AS income_group,\n",
        "    world_avg.year,\n",
        "    world_avg.world_avg_employment\n",
        "FROM world_avg;\n",
        "'''\n",
        "conn.executescript(query3)\n",
        "conn.commit()\n",
        "\n",
        "# summary table by decade\n",
        "query4 = '''\n",
        "SELECT\n",
        "    ((CAST(year AS INTEGER) / 10) * 10) || 's' AS decade,\n",
        "    COUNT(employment_to_pop) AS count_obs,\n",
        "    MIN(employment_to_pop) AS min_ratio,\n",
        "    AVG(employment_to_pop) AS avg_ratio_decade,\n",
        "    MAX(employment_to_pop) AS max_ratio\n",
        "FROM\n",
        "    employment_long\n",
        "WHERE\n",
        "    region != 'World'\n",
        "GROUP BY\n",
        "    decade\n",
        "ORDER BY\n",
        "    decade;\n",
        "'''\n",
        "decade_summary = pd.read_sql_query(query4, conn)\n",
        "\n",
        "query5 = '''\n",
        "SELECT\n",
        "    region,\n",
        "    COUNT(DISTINCT country_name) AS n_countries,\n",
        "    COUNT(employment_to_pop) AS n_obs,\n",
        "    AVG(employment_to_pop) AS avg_ratio,\n",
        "    MIN(employment_to_pop) AS min_ratio,\n",
        "    MAX(employment_to_pop) AS max_ratio\n",
        "FROM\n",
        "    employment_long\n",
        "GROUP BY\n",
        "    region\n",
        "ORDER BY\n",
        "    region;\n",
        "'''\n",
        "region_summary = pd.read_sql_query(query5, conn)\n",
        "\n",
        "query6 = '''\n",
        "SELECT\n",
        "    income_group,\n",
        "    COUNT(DISTINCT country_name) AS n_countries,\n",
        "    COUNT(employment_to_pop) AS n_obs,\n",
        "    MIN(employment_to_pop) AS min_ratio,\n",
        "    AVG(employment_to_pop) AS avg_ratio,\n",
        "    MAX(employment_to_pop) AS max_ratio\n",
        "FROM\n",
        "    employment_long\n",
        "WHERE\n",
        "    income_group IS NOT NULL\n",
        "GROUP BY\n",
        "    income_group\n",
        "ORDER BY\n",
        "    avg_ratio DESC;\n",
        "'''\n",
        "income_summary = pd.read_sql_query(query6, conn)\n",
        "\n",
        "employment_long = pd.read_sql_query(\"SELECT * FROM employment_long\", conn)\n",
        "\n",
        "conn.close()"
      ],
      "id": "setup1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: setup2\n",
        "#| include: false\n",
        "# Import necessary libraries\n",
        "#| fig.cap: \"This is a line plot showing different employment ratios across different regions\"\n",
        "import pandas as pd\n",
        "import sqlite3 \n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib\n",
        "matplotlib.use('Agg')\n",
        "import seaborn as sns\n",
        "from matplotlib.ticker import MultipleLocator\n",
        "import os\n",
        "from IPython.display import Image, display\n",
        "\n",
        "employment_long['year'] = employment_long['year'].astype(int)\n",
        "\n",
        "# Group regional employment data\n",
        "avg_employment_by_region = employment_long.groupby(['year', 'region'])['employment_to_pop'].mean().reset_index()\n",
        "\n",
        "# Group world average separately\n",
        "world_avg_employment = employment_long[employment_long['region'] == 'World'].groupby('year')['employment_to_pop'].mean().reset_index()\n",
        "\n",
        "# --- Filter: Only years >= 1960 ---\n",
        "avg_employment_by_region = avg_employment_by_region[avg_employment_by_region['year'] >= 1960]\n",
        "world_avg_employment = world_avg_employment[world_avg_employment['year'] >= 1960]\n",
        "\n",
        "# --- Plot ---\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "# Plot regional lines (excluding World)\n",
        "sns.lineplot(\n",
        "    data=avg_employment_by_region[avg_employment_by_region['region'] != 'World'],\n",
        "    x='year',\n",
        "    y='employment_to_pop',\n",
        "    hue='region'\n",
        ")\n",
        "\n",
        "# Plot World Average manually (black thick line)\n",
        "plt.plot(\n",
        "    world_avg_employment['year'],\n",
        "    world_avg_employment['employment_to_pop'],\n",
        "    color='black',\n",
        "    linewidth=3,\n",
        "    label='World Average'\n",
        ")\n",
        "\n",
        "# Titles, labels, ticks\n",
        "plt.title('Employment to Population Ratio Over Time by Region (1960–2024)')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Employment to Population Ratio (%)')\n",
        "plt.gca().xaxis.set_major_locator(MultipleLocator(10))\n",
        "plt.grid(True)\n",
        "\n",
        "# Legend (World included)\n",
        "plt.legend(title='Region', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "# Layout and save\n",
        "plt.tight_layout()\n",
        "plt.savefig(\"../figures/employment_to_pop_ratio_by_region.png\")\n",
        "display(Image(filename=\"../figures/employment_to_pop_ratio_by_region.png\"))"
      ],
      "id": "setup2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### GDP Growth\n",
        "\n",
        "Here are the results from the GDP Growth analysis. \n"
      ],
      "id": "0d37b8dc"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: setup3\n",
        "#| include: false\n",
        "# Import necessary libraries\n",
        "import pandas as pd\n",
        "import sqlite3\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib\n",
        "matplotlib.use('Agg')  # Use a non-interactive backend for matplotlib\n",
        "import seaborn as sns\n",
        "from matplotlib.ticker import MultipleLocator\n",
        "from IPython.display import Image, display\n",
        "\n",
        "# connection to the SQLite database\n",
        "conn = sqlite3.connect(\"economic_data.db\")\n",
        "cursor = conn.cursor()\n",
        "\n",
        "# Enable foreign key support\n",
        "cursor.execute(\"PRAGMA foreign_keys = ON;\")\n",
        "\n",
        "print(\"Database connection established and foreign keys enabled.\")\n",
        "\n",
        "# Load the CSV file\n",
        "gdp_growth = pd.read_csv(\"../data/API_NY.GDP.MKTP.KD.ZG_DS2_en_csv_v2_19358.csv\", skiprows=4)\n",
        "gdp_growth\n",
        "\n",
        "# Select the relevant columns\n",
        "columns_to_drop = ['Indicator Name', 'Indicator Code', 'Unnamed: 69']\n",
        "gdp_growth = gdp_growth.drop(columns=columns_to_drop)\n",
        "\n",
        "# Create SQLite table for GDP growth data\n",
        "gdp_growth.to_sql(\"gdp_growth\", conn, if_exists=\"replace\", index=False)\n",
        "\n",
        "# Load the CSV file\n",
        "countries = pd.read_csv(\"../data/Metadata_Country_API_NY.GDP.MKTP.KD.ZG_DS2_en_csv_v2_19358.csv\")\n",
        "\n",
        "# Create SQLite table for countries data\n",
        "countries.to_sql(\"countries\", conn, if_exists=\"replace\", index=False)\n",
        "\n",
        "# List of years as strings\n",
        "years = [str(year) for year in range(1960, 2025)]  # 1960–2024\n",
        "\n",
        "year_columns = \", \".join([f\"`{year}`\" for year in years])\n",
        "\n",
        "# Create gdp_growth_clean table with selected columns and join with countries\n",
        "query1 = f\"\"\"\n",
        "DROP TABLE IF EXISTS gdp_growth_clean;\n",
        "CREATE TABLE gdp_growth_clean AS\n",
        "SELECT \n",
        "    gdp_growth.`Country Name` AS country_name,\n",
        "    gdp_growth.`Country Code` AS country_code,\n",
        "    {year_columns},\n",
        "    countries.Region AS region,\n",
        "    countries.IncomeGroup AS income_group\n",
        "FROM gdp_growth\n",
        "LEFT JOIN countries\n",
        "ON gdp_growth.`Country Code` = countries.`Country Code`\n",
        "WHERE\n",
        "    countries.Region IS NOT NULL;\n",
        "\"\"\"\n",
        "\n",
        "conn.executescript(query1)\n",
        "conn.commit()\n",
        "\n",
        "# Create gdp_growth_long table in long format\n",
        "\n",
        "query2 = \"PRAGMA table_info(gdp_growth_clean);\"\n",
        "columns_info = pd.read_sql_query(query2, conn)\n",
        "\n",
        "years_in_data = []\n",
        "\n",
        "for col in columns_info['name']:\n",
        "    # Check if the column name is an integer in the range 1960-2024\n",
        "    if col.isdigit() and 1960 <= int(col) <= 2024:\n",
        "        years_in_data.append(col)\n",
        "\n",
        "union_queries = []\n",
        "\n",
        "for year in years_in_data:\n",
        "    union_queries.append(f\"\"\"\n",
        "    SELECT \n",
        "        country_name,\n",
        "        country_code,\n",
        "        region,\n",
        "        income_group,\n",
        "        '{year}' AS year,\n",
        "        `{year}` AS gdp_growth\n",
        "    FROM gdp_growth_clean\n",
        "    WHERE `{year}` IS NOT NULL\n",
        "    \"\"\")\n",
        "\n",
        "query3 = \" UNION ALL \".join(union_queries)\n",
        "\n",
        "create_table_query = f\"\"\"\n",
        "DROP TABLE IF EXISTS gdp_growth_long;\n",
        "CREATE TABLE gdp_growth_long AS\n",
        "{query3}\n",
        "\"\"\"\n",
        "\n",
        "conn.executescript(create_table_query)\n",
        "conn.commit()\n",
        "\n",
        "print(\"Table gdp_growth_long created successfully.\")\n",
        "\n",
        "query4 = '''\n",
        "-- Calculate the world average GDP growth for each year\n",
        "WITH world_avg AS (\n",
        "    SELECT \n",
        "        year, \n",
        "        AVG(gdp_growth) AS world_avg_growth\n",
        "    FROM gdp_growth_long\n",
        "    WHERE region IS NOT NULL  -- Ensure you're using valid regions (not countries without regions)\n",
        "    GROUP BY year\n",
        ")\n",
        "\n",
        "-- Insert the world averages into the table\n",
        "INSERT INTO gdp_growth_long (country_name, country_code, region, income_group, year, gdp_growth)\n",
        "SELECT \n",
        "    'World' AS country_name, \n",
        "    NULL AS country_code,  -- No country code for the world\n",
        "    'World' AS region,     -- Region labeled as 'World'\n",
        "    'World' AS income_group,  -- No income group for the world\n",
        "    world_avg.year,\n",
        "    world_avg.world_avg_growth\n",
        "FROM world_avg;\n",
        "'''\n",
        "conn.executescript(query4)\n",
        "conn.commit()"
      ],
      "id": "setup3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The table below summarizes GDP growth statistics across decades.\n"
      ],
      "id": "1dc4dccf"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: table-decade\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Create a new table for average GDP growth by decade\n",
        "query5 = '''\n",
        "SELECT\n",
        "    ((CAST(year AS INTEGER) / 10) * 10) || 's' AS decade,\n",
        "    COUNT(gdp_growth) AS count_growth,\n",
        "    MIN(gdp_growth) AS min_growth,\n",
        "    AVG(gdp_growth) AS avg_growth_decade,\n",
        "    MAX(gdp_growth) AS max_growth\n",
        "FROM\n",
        "    gdp_growth_long\n",
        "WHERE\n",
        "    region != 'World'  -- Exclude the world average\n",
        "GROUP BY\n",
        "    decade\n",
        "ORDER BY\n",
        "    decade;\n",
        "'''\n",
        "# Execute the query and fetch the results\n",
        "decade_growth = pd.read_sql_query(query5, conn)\n",
        "decade_growth"
      ],
      "id": "table-decade",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The 1960s exhibited the highest average GDP growth (~5.46%), while 2020 to present had the lowest average (~2.00%) across the world. The 1990s showed notable volatility with the widest range in growth rates (-64% to +150%). This pattern highlights a long-term slowdown of global economic expansion over the past six decades.\n",
        "\n",
        "The table below summarizes GDP growth by world region.\n"
      ],
      "id": "220d744c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: table-region\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Create a new table for average GDP growth by region\n",
        "query6 = '''\n",
        "SELECT\n",
        "    region,\n",
        "    COUNT(DISTINCT country_name) AS n_countries,\n",
        "    COUNT(gdp_growth) AS n_obs,\n",
        "    AVG(gdp_growth) AS avg_growth,\n",
        "    MIN(gdp_growth) AS min_growth,\n",
        "    MAX(gdp_growth) AS max_growth\n",
        "FROM\n",
        "    gdp_growth_long\n",
        "GROUP BY\n",
        "    region\n",
        "ORDER BY\n",
        "    region;\n",
        "\n",
        "'''\n",
        "# Execute the query and fetch the results\n",
        "region_avg = pd.read_sql_query(query6, conn)\n",
        "region_avg"
      ],
      "id": "table-region",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "When broken down by region, the Middle East and North Africa had the highest average GDP growth (~4.93%) compared to other world regions from 1960 to 2023. This is likely due to oil wealth and energy exports in this region. North America had the slowest average growth (~2.82%) during this time period. This is consistent with trends observed in developed economies with mature markets and slower population growth. The variabiltiy seen across regions suggest that resource wealth, political stability, and demographic factors strongly influence long-term GDP trajectories.\n",
        "\n",
        "The table below summarizes GDP growth by income group. \n"
      ],
      "id": "ba0a5a73"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: table-income\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Create a new table for average GDP growth by income group\n",
        "query7 = '''\n",
        "SELECT\n",
        "    income_group,\n",
        "    COUNT(DISTINCT country_name) AS n_countries,\n",
        "    COUNT(gdp_growth) AS n_obs,\n",
        "    MIN(gdp_growth) AS min_growth,\n",
        "    AVG(gdp_growth) AS avg_growth,\n",
        "    MAX(gdp_growth) AS max_growth\n",
        "FROM\n",
        "    gdp_growth_long\n",
        "WHERE\n",
        "    income_group IS NOT NULL\n",
        "GROUP BY\n",
        "    income_group\n",
        "ORDER BY\n",
        "    avg_growth DESC;\n",
        "'''\n",
        "# Execute the query and fetch the results\n",
        "income_avg = pd.read_sql_query(query7, conn)\n",
        "income_avg"
      ],
      "id": "table-income",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Among income groups, Upper Middle Income countries experienced the highest average growth (~4.04%) from 1960 to 2023, while High Income countries had lower average growth (~3.26%) during this time period. The Upper Middle Income country growth reflects the rapid industrialization and modernization of economies such as China, Malaysia, and Turkey from 1960 to 2023. The more stable, lower growth experienced by High Income countries reinforces the idea that as economies mature, growth rates naturally slow. This comparison shows the importance of the development stage in driving economic performance across countries.\n"
      ],
      "id": "ca8495d3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: SQL-end\n",
        "#| include: false\n",
        "# Create pandas DataFrame from gdp_growth_long table\n",
        "gdp_growth_long = pd.read_sql_query(\"SELECT * FROM gdp_growth_long\", conn)\n",
        "\n",
        "# Close the database connection\n",
        "conn.close()\n",
        "print(\"Database connection closed.\")"
      ],
      "id": "SQL-end",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This first figure displays average GDP growth over time by region.\n"
      ],
      "id": "27e7d73c"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false,
        "fig.cap": "This is a line plot showing GDP growth over time for different regions of the world"
      },
      "source": [
        "#| label: fig-region\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Graph average GDP growth over time by region\n",
        "avg_growth_by_year_region = gdp_growth_long.groupby(['year', 'region'])['gdp_growth'].mean().reset_index()\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "\n",
        "# Plot the average GDP growth by year and region (excluding World)\n",
        "sns.lineplot(\n",
        "    data=avg_growth_by_year_region[avg_growth_by_year_region['region'] != 'World'], \n",
        "    x='year', \n",
        "    y='gdp_growth', \n",
        "    hue='region'\n",
        ")\n",
        "\n",
        "# Manually add the world average line\n",
        "world_avg_growth = gdp_growth_long[gdp_growth_long['region'] == 'World'].groupby('year')['gdp_growth'].mean().reset_index()\n",
        "\n",
        "# Plot the world average line\n",
        "plt.plot(world_avg_growth['year'], world_avg_growth['gdp_growth'], \n",
        "         color='black', linewidth=3, label='World Average')  # Black, thicker line for world average\n",
        "\n",
        "# Set titles and labels\n",
        "plt.title('Average GDP Growth Over Time by Region')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Average GDP Growth (%)')\n",
        "\n",
        "# Adjust the legend to include world average\n",
        "plt.legend(title='Region', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "plt.gca().xaxis.set_major_locator(MultipleLocator(10))\n",
        "\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.savefig(\"../figures/avg_gdp_growth_by_region.png\")\n",
        "display(Image(filename=\"../figures/avg_gdp_growth_by_region.png\"))"
      ],
      "id": "fig-region",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "While short-term fluctuations are common across the globe, a general decline in growth rates is observed post-1970s across most regions. It is clear on the figure that all world regions experienced high short-term volatility, especially Sub-Saharan Africa and South Asia, with many regions experiencing sharp dips around known global recessions (i.e. the early 1980s and late 2000s). The world average (thicker black line) remains relatively stable compared to the volatility shown in other regions, with spikes and dips corresponding to major global events. The world average also demonstrates how the global economy exhibits greater resilience and inertia compared to individual regions. \n",
        "\n",
        "The second figure presents a smoothed trend line of GDP growth over time by world region.\n"
      ],
      "id": "d92da54d"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false,
        "fig.cap": "This is a line plot showing smoothed GDP growth over time for different regions of the world"
      },
      "source": [
        "#| label: fig-regionsmooth\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Graph average GDP growth over time by region with smoothed lines\n",
        "\n",
        "# Make sure year is numeric\n",
        "gdp_growth_long['year'] = gdp_growth_long['year'].astype(int)\n",
        "\n",
        "# Create the plot\n",
        "plt.figure(figsize=(14, 8))\n",
        "\n",
        "# Plot with trend lines for regions (smoothing), excluding world data\n",
        "sns.lmplot(\n",
        "    data=gdp_growth_long[gdp_growth_long['region'].notnull() & (gdp_growth_long['region'] != 'World')],\n",
        "    x='year',\n",
        "    y='gdp_growth',\n",
        "    hue='region',\n",
        "    height=8,\n",
        "    aspect=1.5,\n",
        "    scatter=False,  # Don't plot individual points, just the smoothed line\n",
        "    lowess=True,    # Smooth the lines\n",
        "    legend=False     # Keep the legend with all regions\n",
        ")\n",
        "\n",
        "# Manually add the world average line (smoothed)\n",
        "world_data = gdp_growth_long[gdp_growth_long['region'] == 'World']\n",
        "\n",
        "# Plot the world average line, smoothed with lowess\n",
        "sns.regplot(\n",
        "    data=world_data,\n",
        "    x='year',\n",
        "    y='gdp_growth',\n",
        "    scatter=False,  # No scatter points\n",
        "    lowess=True,    # Smooth the world average line using lowess\n",
        "    line_kws={'color': 'black', 'linewidth': 3}  # Black, thicker line for the world average\n",
        ")\n",
        "\n",
        "# Set titles and labels\n",
        "plt.title('Smoothed GDP Growth Over Time by Region')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Average GDP Growth (%)')\n",
        "\n",
        "# Adjust legend to include world average line\n",
        "handles, labels = plt.gca().get_legend_handles_labels()\n",
        "\n",
        "# Manually add the world average to the legend (only once)\n",
        "handles.append(plt.Line2D([0], [0], color='black', linewidth=3))  # Add world average line handle\n",
        "labels.append('World Average')  # Add world average label\n",
        "\n",
        "# Display the legend and finalize the plot\n",
        "plt.legend(handles=handles, labels=labels, title='Region', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.savefig(\"../figures/gdp_growth_by_region_trend.png\")\n",
        "display(Image(filename=\"../figures/gdp_growth_by_region_trend.png\"))"
      ],
      "id": "fig-regionsmooth",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This reveals a clearer long-term downward trend of GDP growth across all regions in the world. Notably, Sub-Saharan Africa, the Middle East and North Africa, and South Asia initially experienced relatively high growth, but later their growth rates converged downward with other regions. North America and Europe and Central Asia have shown the lowest growth decline trajectory so far. This is likely explained by structural factors, such as aging populations, slower technological diffusion, and diminishing returns to capital.\n",
        "\n",
        "The below figure displays the average GDP growth over time by country income level.\n"
      ],
      "id": "715be696"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false,
        "fig.cap": "This is a line plot showing GDP growth over time for countries of different income levels"
      },
      "source": [
        "#| label: fig-income\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Graph average GDP growth over time by income group\n",
        "\n",
        "# Group by both year and income group, calculate the mean\n",
        "avg_growth_by_year_income = gdp_growth_long.groupby(['year', 'income_group'])['gdp_growth'].mean().reset_index()\n",
        "\n",
        "# Plot the average GDP growth by year and income group (excluding World)\n",
        "plt.figure(figsize=(14, 8))\n",
        "sns.lineplot(\n",
        "    data=avg_growth_by_year_income[avg_growth_by_year_income['income_group'] != 'World'], \n",
        "    x='year', \n",
        "    y='gdp_growth', \n",
        "    hue='income_group'\n",
        ")\n",
        "\n",
        "# Manually add the world average line\n",
        "world_avg_growth_income = gdp_growth_long[gdp_growth_long['income_group'] == 'World'].groupby('year')['gdp_growth'].mean().reset_index()\n",
        "\n",
        "# Plot the world average line\n",
        "plt.plot(world_avg_growth_income['year'], world_avg_growth_income['gdp_growth'], \n",
        "         color='black', linewidth=3, label='World Average')  # Black, thicker line for world average\n",
        "\n",
        "# Set titles and labels\n",
        "plt.title('Average GDP Growth Over Time by Income Group')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Average GDP Growth (%)')\n",
        "\n",
        "# Get the current legend handles and labels\n",
        "handles, labels = plt.gca().get_legend_handles_labels()\n",
        "\n",
        "# Define the desired order for the legend\n",
        "legend_order = ['World', 'Low income', 'Lower middle income', 'Upper middle income', 'High income']\n",
        "\n",
        "# Reorder the handles and labels based on the desired order\n",
        "ordered_handles = []\n",
        "ordered_labels = []\n",
        "\n",
        "# Add world first\n",
        "ordered_handles.append(plt.Line2D([0], [0], color='black', linewidth=3, label='World Average'))\n",
        "ordered_labels.append('World Average')\n",
        "\n",
        "# Add other regions in the desired order\n",
        "for label in legend_order[1:]:\n",
        "    if label in labels:\n",
        "        idx = labels.index(label)\n",
        "        ordered_handles.append(handles[idx])\n",
        "        ordered_labels.append(labels[idx])\n",
        "\n",
        "# Add the reordered legend to the plot\n",
        "plt.legend(handles=ordered_handles, labels=ordered_labels, title='Income Group', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "\n",
        "plt.savefig(\"../figures/avg_gdp_growth_by_income.png\")\n",
        "display(Image(filename=\"../figures/avg_gdp_growth_by_income.png\"))"
      ],
      "id": "fig-income",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "This income group graphs show that GDP growth trends differ substantially across income levels. High-income countries experienced relatively stable and moderate growth throughout the observed period, with smaller fluctuations even during major global events such as the 2008 financial crisis and the 2020 pandemic. In contrast, lower-middle-income and low-income countries exhibited much greater volatility, with sharp downturns during periods of global recession. Upper-middle-income countries generally achieved higher average growth rates, particularly during the 1990s and early 2000s, but their growth also became less consistent after 2008. These patterns suggest that lower-income countries are more vulnerable to external shocks, while high-income countries are more insulated due to stronger economic institutions and diversification.\n",
        "\n",
        "This last figure presents a smoothed trend line of GDP growth over time by country income level.\n"
      ],
      "id": "26db7bd6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false,
        "fig.cap": "This is a line plot showing smoothed GDP growth over time for countries of different income levels"
      },
      "source": [
        "#| label: fig-incomesmooth\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Graph average GDP growth over time by income group with smoothed lines\n",
        "\n",
        "# Group by year and income group, calculate the mean\n",
        "avg_growth_by_year_income = gdp_growth_long.groupby(['year', 'income_group'])['gdp_growth'].mean().reset_index()\n",
        "\n",
        "# Plot with smoothing for income groups\n",
        "plt.figure(figsize=(14, 8))\n",
        "sns.lmplot(\n",
        "    data=gdp_growth_long[gdp_growth_long['income_group'].notnull() & (gdp_growth_long['region'] != 'World')],\n",
        "    x='year',\n",
        "    y='gdp_growth',\n",
        "    hue='income_group',\n",
        "    height=8,\n",
        "    aspect=1.5,\n",
        "    scatter=False,  # Don't plot individual points, just the smoothed line\n",
        "    lowess=True,    # Smooth the lines\n",
        "    legend=False     # Turn off the legend to customize it later\n",
        ")\n",
        "\n",
        "# Manually add the world average line (smoothed)\n",
        "world_data = gdp_growth_long[gdp_growth_long['income_group'] == 'World']\n",
        "\n",
        "# Plot the world average line, smoothed with lowess\n",
        "sns.regplot(\n",
        "    data=world_data,\n",
        "    x='year',\n",
        "    y='gdp_growth',\n",
        "    scatter=False,  # No scatter points\n",
        "    lowess=True,    # Smooth the world average line using lowess\n",
        "    line_kws={'color': 'black', 'linewidth': 3}  # Black, thicker line for the world average\n",
        ")\n",
        "\n",
        "# Set titles and labels\n",
        "plt.title('Smoothed Average GDP Growth Over Time by Income Group')\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Average GDP Growth (%)')\n",
        "\n",
        "# Get the current legend handles and labels\n",
        "handles, labels = plt.gca().get_legend_handles_labels()\n",
        "\n",
        "# Define the desired order for the legend\n",
        "legend_order = ['World', 'Low income', 'Lower middle income', 'Upper middle income', 'High income']\n",
        "\n",
        "# Reorder the handles and labels based on the desired order\n",
        "ordered_handles = []\n",
        "ordered_labels = []\n",
        "\n",
        "# Add world first\n",
        "ordered_handles.append(plt.Line2D([0], [0], color='black', linewidth=3, label='World Average'))\n",
        "ordered_labels.append('World Average')\n",
        "\n",
        "# Add other regions in the desired order\n",
        "for label in legend_order[1:]:\n",
        "    if label in labels:\n",
        "        idx = labels.index(label)\n",
        "        ordered_handles.append(handles[idx])\n",
        "        ordered_labels.append(labels[idx])\n",
        "\n",
        "# Add the reordered legend to the plot\n",
        "plt.legend(handles=ordered_handles, labels=ordered_labels, title='Income Group', bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.savefig(\"../figures/avg_gdp_growth_by_income_trend.png\")\n",
        "display(Image(filename=\"../figures/avg_gdp_growth_by_income_trend.png\"))"
      ],
      "id": "fig-incomesmooth",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The smoothed income group trends highlight longer-term structural shifts in global GDP growth patterns. Across all income groups, there is a visible gradual decline in average growth rates from the 1960s to the 2020s. Although upper-middle-income countries reached a peak of growth around the early 2000s, this momentum slowed considerably in the following decades. Low-income countries experienced the steepest long-term decline, pointing to persistent challenges such as political instability, lack of infrastructure, and dependency on a narrow range of industries. High-income countries maintained steadier growth but at increasingly lower rates over time, suggesting that mature economies are facing limits to expansion. Together, these smoothed trends imply that broader global factors, such as technological stagnation, demographic shifts, and environmental pressures, are influencing growth trajectories across all income levels, albeit unevenly.\n",
        "\n",
        "### Finding what makes the best economies work? Do any of our variables help estimate this\n",
        "In addition to these variables, we aim to identify factors that contribute to sustained economic growth. We will measure economic growth by examining the percentage increase in GDP over time and focus our analysis on the top five countries with the highest growth rates.\n"
      ],
      "id": "37fb27e3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Read data for exports, GDP, and employment\n",
        "data_EXP = pd.read_csv(\n",
        "    \"C:\\\\Users\\\\davis\\\\Downloads\\\\API_NE.EXP.GNFS.ZS_DS2_en_csv_v2_19646\\\\API_NE.EXP.GNFS.ZS_DS2_en_csv_v2_19646.csv\"\n",
        ")\n",
        "data_GDP = pd.read_csv(\n",
        "    \"C:\\\\Users\\\\davis\\\\Downloads\\\\API_NY.GDP.PCAP.KD_DS2_en_csv_v2_19405.csv\", \n",
        "    skiprows=4\n",
        ")\n",
        "data_GDP_per_cap = pd.read_csv(\n",
        "    \"C:\\\\Users\\\\davis\\\\Downloads\\\\API_NY.GDP.PCAP.KD_DS2_en_csv_v2_19405.csv\", \n",
        "    skiprows=4\n",
        ")\n",
        "data_Employment = pd.read_csv(\n",
        "    \"C:\\\\Users\\\\davis\\\\Downloads\\\\API_SL.EMP.TOTL.SP.ZS_DS2_en_csv_v2_23936.csv\", \n",
        "    skiprows=4\n",
        ")\n",
        "# List of year columns\n",
        "year_cols = [str(year) for year in range(1990, 2025)]\n",
        "\n",
        "# Calculate year-to-year percentage change\n",
        "df_pct_change = data_GDP.copy()\n",
        "df_pct_change[year_cols] = data_GDP[year_cols].pct_change(axis=1) * 100  # multiply by 100 to get percent\n",
        "\n",
        "# Create new ranked columns\n",
        "ranked_cols = [f\"{col}_rank\" for col in year_cols]  # new names like '1960_rank', '1961_rank', etc.\n",
        "\n",
        "# Make a copy and rank each year column\n",
        "df_ranked = df_pct_change.copy()\n",
        "for original, new in zip(year_cols, ranked_cols):\n",
        "    df_ranked[new] = df_ranked[original].rank(ascending=False, method='min')  # highest value gets rank 1\n",
        "\n",
        "# Now sum all the ranking columns into a new column\n",
        "df_ranked['Total_Rank'] = df_ranked[ranked_cols].sum(axis=1)\n",
        "\n",
        "# Exclude countries with \"Asia\" in the name or starting with \"Late\"\n",
        "df_ranked = df_ranked[~df_ranked['Country Name'].str.contains('Asia', case=False, na=False)]\n",
        "df_ranked = df_ranked[~df_ranked['Country Name'].str.lower().str.startswith('late', na=False)]\n",
        "df_ranked = df_ranked[~df_ranked['Country Name'].str.lower().str.startswith('upper', na=False)]\n",
        "# Calculate the average rank for each row (ignoring NaNs)\n",
        "df_ranked['Average_Rank'] = df_ranked[ranked_cols].mean(axis=1, skipna=True)\n",
        "\n",
        "# View the top 5 rows with the lowest Average_Rank\n",
        "top5_avg = df_ranked.nsmallest(5, 'Average_Rank')\n",
        "\n",
        "print(top5_avg[['Country Name', 'Indicator Name', 'Average_Rank']])"
      ],
      "id": "e263c5ef",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "These 5 highest countries are China, Viet Nam, Myanmar, Kosovo and Lao PDR. Let us put htem up on a graph to show their relationship over time\n"
      ],
      "id": "38778b6c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Assume top5_avg is already created\n",
        "year_cols = [str(year) for year in range(1990, 2025)]\n",
        "\n",
        "# Set up the plot\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# Plot each row in top5_avg\n",
        "for idx, row in top5_avg.iterrows():\n",
        "    plt.plot(\n",
        "        year_cols,\n",
        "        row[year_cols].values,\n",
        "        label=row['Country Name']\n",
        "    )\n",
        "\n",
        "# Add horizontal line at 2% GDP growth\n",
        "plt.axhline(y=2, color='red', linestyle='--', linewidth=2, label='Healthy GDP growth rate')\n",
        "\n",
        "# Customize the plot\n",
        "plt.title('Change in GDP per capita Year by Year (Top 5)', fontsize=16)\n",
        "plt.xlabel('Year', fontsize=14)\n",
        "plt.ylabel('% Change in GDP', fontsize=14)\n",
        "\n",
        "# Set x-ticks to every 5 years\n",
        "xticks = [str(year) for year in range(1990, 2025, 5)]\n",
        "plt.xticks(ticks=xticks, rotation=45)\n",
        "\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the plot\n",
        "plt.savefig('ChangeGDPTop5.png')"
      ],
      "id": "17cde1c8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Economists state that a health gdp growth rate is 2% we see that on average, our top 5 countries are always above the average, excluding the huge drop during COVID.\n",
        "\n",
        "Let us see if we can find any meaningful connections between these coutnries when looking at percent of Export and Imports as a portion of GDP\n"
      ],
      "id": "f21e1877"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "merged_data = pd.merge(top5_avg, data_EXP, on=\"Country Name\", how='inner')\n",
        "\n",
        "# Example: Assuming `merged_data` contains your data\n",
        "year_cols = [f'{year}_y' for year in range(1990, 2025)]  # Columns like '1960_y', '1961_y', etc.\n",
        "\n",
        "# Set up the plot\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# Plot each country's data over time (one line per country)\n",
        "for idx, row in merged_data.iterrows():\n",
        "    plt.plot(year_cols, row[year_cols].values, label=row['Country Name'], marker='o')\n",
        "\n",
        "# Customize the plot\n",
        "plt.title('Exports of goods and services Over Time for Top 5', fontsize=16)\n",
        "plt.xlabel('Year', fontsize=14)\n",
        "plt.ylabel('(% of GDP)', fontsize=14)\n",
        "\n",
        "# Set x-ticks to every 5 years\n",
        "xticks = [f'{year}_y' for year in range(1990, 2025, 5)]\n",
        "plt.xticks(ticks=xticks, labels=[str(year) for year in range(1990, 2025, 5)], rotation=45)\n",
        "\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the plot\n",
        "plt.savefig('ChangeEXP(Top5).png')\n"
      ],
      "id": "dbf314a6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "When looking at the percentage of GDP made up by exports and imports, we see a clear difference between China, Vietnam, Myanmar, Kosovo, and Lao PDR. This variation highlights how trade can be a powerful tool for economic growth. By expanding exports, countries can generate more income, create jobs, and bring in foreign currency, which can be reinvested into infrastructure, education, and technology. Similarly, imports allow countries to access goods, services, and technology that they do not produce themselves, helping to improve productivity and competitiveness.\n",
        "For example, Vietnam has aggressively expanded its export sector over the past three decades by integrating into global supply chains, especially in electronics, textiles, and manufacturing. This strategy has helped Vietnam achieve rapid economic growth, reduce poverty, and transition from a primarily agricultural economy to one focused on industry and services. In contrast, China used trade as a major driver of its economic rise by becoming the \"world’s factory,\" exporting a vast range of manufactured goods while simultaneously importing raw materials and high-tech equipment to fuel its industrial expansion.\n",
        "Even smaller economies like Kosovo have used trade to stimulate growth. By opening its markets and increasing exports, especially in sectors like metals, textiles, and services, Kosovo has worked to create more job opportunities and strengthen its economy, even though challenges remain.\n",
        "In short, we see that our countries have successfully used exports and imports to connect with the global economy which contributed to faster GDP growth.\n",
        "\n",
        "Speaking on GDP growth, let us look at and compare the nominal GDP growth for each of the countries, and see if there are any meaningful relationships there."
      ],
      "id": "3fb3730e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "merged_data2 = pd.merge(top5_avg, data_GDP_per_cap, on=\"Country Name\", how='inner')\n",
        "\n",
        "# Example: Assuming `merged_data` contains your data\n",
        "year_cols = [f'{year}_y' for year in range(1990, 2025)]  # Columns like '1960_y', '1961_y', etc.\n",
        "\n",
        "# Set up the plot\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# Plot each country's data over time (one line per country)\n",
        "for idx, row in merged_data2.iterrows():\n",
        "    plt.plot(year_cols, row[year_cols].values, label=row['Country Name'], marker='o')\n",
        "\n",
        "# Customize the plot\n",
        "plt.title('GDP Per Capita Over Time (Top5)', fontsize=16)\n",
        "plt.xlabel('Year', fontsize=14)\n",
        "plt.ylabel('(GDP Per Capita)', fontsize=14)\n",
        "\n",
        "# Set x-ticks to every 5 years\n",
        "xticks = [f'{year}_y' for year in range(1990, 2025, 5)]\n",
        "plt.xticks(ticks=xticks, labels=[str(year) for year in range(1990, 2025, 5)], rotation=45)\n",
        "\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the plot\n",
        "plt.savefig('GDPPerCapNom(Top5).png')"
      ],
      "id": "4675d697",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The graph presented examines nominal GDP per capita over time to assess the economic growth trajectories of our top five countries. By focusing on nominal GDP per capita, the graph aims to provide a clearer understanding of each country’s initial economic position and how it evolves over time. Upon review, we observe that there is little correlation between the starting GDP per capita of the countries, as they begin at different levels yet still experience significant economic growth. While the goal was to explore the influence of initial economic conditions on long-term growth patterns, the results do not strongly support this hypothesis. Instead, it becomes apparent that the varying starting points in capital across the countries did not seem to hinder their ability to achieve high rates of growth.\n",
        "\n",
        "\n",
        "Let us now go onto to look at the relationship between employment percentages"
      ],
      "id": "a208fe6a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "merged_data3 = pd.merge(top5_avg, data_Employment, on=\"Country Name\", how='inner')\n",
        "\n",
        "# Example: Assuming `merged_data` contains your data\n",
        "year_cols = [f'{year}_y' for year in range(1990, 2025)]  # Columns like '1960_y', '1961_y', etc.\n",
        "\n",
        "# Set up the plot\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# Plot each country's data over time (one line per country)\n",
        "for idx, row in merged_data3.iterrows():\n",
        "    plt.plot(year_cols, row[year_cols].values, label=row['Country Name'], marker='o')\n",
        "\n",
        "# Customize the plot\n",
        "plt.title('Employment Ratio (Top5)', fontsize=16)\n",
        "plt.xlabel('Year', fontsize=14)\n",
        "plt.ylabel('(Percent Workforce Employed)', fontsize=14)\n",
        "\n",
        "# Set x-ticks to every 5 years\n",
        "xticks = [f'{year}_y' for year in range(1990, 2025, 5)]\n",
        "plt.xticks(ticks=xticks, labels=[str(year) for year in range(1990, 2025, 5)], rotation=45)\n",
        "\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show the plot\n",
        "plt.savefig('EmployRatio(Top5).png')"
      ],
      "id": "43733305",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Across China, Vietnam, Myanmar, Kosovo, and Lao PDR, employment ratios show some common patterns alongside important differences. In general, countries that have embraced export-led growth strategies, industrialization, and international trade tend to have higher employment ratios and have created more formal job opportunities. Meanwhile, countries that remain heavily dependent on agriculture or have less diversified economies often experience lower employment ratios, with a larger share of workers engaged in informal or subsistence activities.\n",
        "Focusing specifically on Vietnam and Lao PDR highlights these trends clearly. Vietnam has maintained a high employment ratio, thanks to its rapid industrialization and integration into global markets. Since the 1990s, Vietnam’s shift from a primarily agricultural economy to a manufacturing and services-driven one has created millions of jobs in factories, technology firms, and export-oriented industries. Trade agreements with major partners like the United States, the European Union, and neighboring Asian countries have further boosted employment by attracting foreign investment and expanding Vietnam’s access to global markets.\n",
        "In contrast, Lao PDR has a much lower employment ratio. Although Laos has also experienced economic growth, much of its labor force remains tied to agriculture, often in informal or subsistence roles. Industrial and manufacturing sectors are smaller, and trade is less diversified, limiting the number of formal job opportunities available. While sectors like hydropower and mining have driven some growth, they tend to be capital-intensive rather than labor-intensive, meaning they generate fewer jobs relative to their economic output.\n",
        "Despite these differences, all five countries have maintained relatively high GDP growth rates in recent years. Strong employment growth, especially in Vietnam, has played a key role by boosting domestic demand, increasing household incomes, and enabling broader participation in the economy — all of which help sustain and accelerate economic expansion.\n",
        "\n",
        "## Conclusion\n"
      ],
      "id": "f096fca0"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/home/ejinrig/anaconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}